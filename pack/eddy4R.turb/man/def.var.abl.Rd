% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/def.var.abl.R
\name{def.var.abl}
\alias{def.var.abl}
\title{Definition function: Boundary layer variables}
\usage{
def.var.abl(
  densMoleAirDry = NULL,
  distZaxsAbl = NULL,
  distZaxsMeas = NULL,
  fluxH2o = NULL,
  fluxTemp = NULL,
  fluxTempVirtPot00 = NULL,
  tempVirtPot00 = NULL,
  velo = NULL,
  veloFric = NULL
)
}
\arguments{
\item{densMoleAirDry}{A vector of length 1 containing the dry air density, of class "numeric" and with unit attribute [mol m-3]. Required to return rtioMoleDryH2oScalAbl, rtioMoleDryH2oScalAtmSurf.}

\item{distZaxsAbl}{A vector of length 1 containing the atmospheric boundary layer height above ground, of class "numeric" and with unit attribute [m]. Required to return rtioMoleDryH2oScalAbl, tempScalAbl, timeScalCvct, veloScalCvct.}

\item{distZaxsMeas}{A vector of length 1 containing the effective measurement height (i.e. vertical distance of the measurement above displacement height), of class "numeric" and with unit attribute [m]. Required to return paraStbl.}

\item{fluxH2o}{A vector of length 1 containing the latent heat flux in kinematic units, of class "numeric" and with unit attribute [mol m-2 s-1]. Required to return rtioMoleDryH2oScalAbl, rtioMoleDryH2oScalAtmSurf.}

\item{fluxTemp}{A vector of length 1 containing the sensible heat flux in kinematic units, of class "numeric" and with unit attribute [K m s-1]. Required to return tempScalAtmSurf, which in turn feeds into def.itc().}

\item{fluxTempVirtPot00}{[K m s-1] A vector of length 1 containing the buoyancy flux in kinematic units, of class "numeric" and with unit attribute [K m s-1]. Required to return distObkv, paraStbl, rtioMoleDryH2oScalAbl, tempScalAbl, timeScalCvct, veloScalCvct.}

\item{tempVirtPot00}{[K] A vector of length 1 containing the virtual potential temperature, of class "numeric" and with unit attribute [K]. Required to return distObkv, paraStbl, rtioMoleDryH2oScalAbl,  tempScalAbl, timeScalCvct, veloScalCvct.}

\item{velo}{A data frame of the 3-dimensional wind vector in any orthogonal coordinate representation. Contains the variables Xaxs, Yaxs, Xaxs, each of class "numeric" and with unit attribute [m s-1]. Required to return coefSdMeanVelo.}

\item{veloFric}{A vector of length 1 containing the friction velocity, of class "numeric" and with unit attribute [m s-1]. Required to return distObkv, paraStbl, rtioMoleDryH2oScalAtmSurf, tempScalAtmSurf.}
}
\value{
The returned object is a data frame with a single observation, containing the following variables:
   $coefSdMeanVelo: turbulence intensity (aka coefficient of variation) of the  total wind vector in unit [-]. Requires the following numeric function argument to be supplied for non-NaN result: velo.
   $distObkv: Obukhov length in unit [m]. Requires the following numeric function arguments to be supplied for non-NaN result: fluxTempVirtPot00, tempVirtPot00, veloFric.
   $paraStbl: Atmospheric stability in unit [-]. Requires the following numeric function arguments to be supplied for non-NaN result: distZaxsMeas, fluxTempVirtPot00, tempVirtPot00, veloFric.
   $rtioMoleDryH2oScalAbl: Humidity scale in the atmospheric boundary layer in units [molH2o mol-1Dry]. Requires the following numeric function arguments to be supplied for non-NaN result: densMoleAirDry, distZaxsAbl, fluxH2o, fluxTempVirtPot00, tempVirtPot00.
   $rtioMoleDryH2oScalAtmSurf: Humidity scale in the atmospheric surface layer in units [molH2o mol-1Dry]. Requires the following numeric function arguments to be supplied for non-NaN result: densMoleAirDry, fluxH2o, veloFric.
   $tempScalAbl: Temperature scale in the atmospheric boundary layer in unit [K]. Requires the following numeric function arguments to be supplied for non-NaN result: distZaxsAbl, fluxTempVirtPot00, tempVirtPot00.
   $tempScalAtmSurf: Temperature scale in the atmospheric surface layer in unit [K]. Requires the following numeric function arguments to be supplied for non-NaN result: fluxTemp, veloFric.
   $timeScalCvct: Convective time scale in the atmospheric boundary layer in unit [s]. Requires the following numeric function arguments to be supplied for non-NaN result: distZaxsAbl, fluxTempVirtPot00, tempVirtPot00.
   $veloScalCvct: Convective velocity scale in the atmospheric boundary layer (aka Deardorff velocity) in units [m s-1]. Requires the following numeric function arguments to be supplied for non-NaN result: distZaxsAbl, fluxTempVirtPot00, tempVirtPot00.
}
\description{
Function definition. This function calculates turbulence intensity, Obukhov length, atmospheric stability, convective velocity, convective timescale, temperature scale, and humidity scale.
}
\examples{
prepare input data

  create emptly list for inputs
  inp <- base::list()
  
  dry air density
  inp$densMoleAirDry <- 41.91337
  base::attr(inp$densMoleAirDry,"unit") <- "mol m-3"
  
  atmospheric boundary layer height
  inp$distZaxsAbl = 1000
  base::attr(inp$distZaxsAbl,"unit") <- "m"
  
  effective measurement height
  inp$distZaxsMeas = 8
  base::attr(inp$distZaxsMeas,"unit") <- "m"
  
  latent heat flux in kinematic units
  inp$fluxH2o = 9.019642e-06
  base::attr(inp$fluxH2o,"unit") <- "mol m-2 s-1"
  
  sensible heat flux in kinematic units
  inp$fluxTemp = 0.001527586
  base::attr(inp$fluxTemp,"unit") <- "K m s-1"
  
  buoyancy flux in kinematic units
  inp$fluxTempVirtPot00 = 0.001355592
  base::attr(inp$fluxTempVirtPot00,"unit") <- "K m s-1"
  
  virtual potential temperature
  inp$tempVirtPot00 = 274.1534
  base::attr(inp$tempVirtPot00,"unit") <- "K"
  
  3-dimensional wind vector
  inp$velo <- base::data.frame(
    Xaxs = c(-1.889635, -1.661724, -1.615837, -1.711132, -1.223001),
    Yaxs = c(1.365195, 1.277106, 1.394891, 1.180698, 1.283836),
    Zaxs = c(0.1766139, 0.1849477, 0.3443318, 0.1902303, 0.2391932)
  )
  base::attr(inp$velo$Xaxs,"unit") <- "m s-1"
  base::attr(inp$velo$Yaxs,"unit") <- "m s-1"
  base::attr(inp$velo$Zaxs,"unit") <- "m s-1"
  
  friction velocity
  inp$veloFric = 0.15489
  base::attr(inp$veloFric,"unit") <- "m s-1"
  
call function

  Example 1. All function argument values and units supplied - works.
  out <- def.var.abl(
    densMoleAirDry = inp$densMoleAirDry,
    distZaxsAbl = inp$distZaxsAbl,
    distZaxsMeas = inp$distZaxsMeas,
    fluxH2o = inp$fluxH2o,
    fluxTemp = inp$fluxTemp,
    fluxTempVirtPot00 = inp$fluxTempVirtPot00,
    tempVirtPot00 = inp$tempVirtPot00,
    velo = inp$velo,
    veloFric = inp$veloFric
  )
  utils::str(out)
  base::rm(out)
  
  Example 2. fluxTemp is missing unit attribute - throws error.
  base::attr(inp$fluxTemp,"unit") <- NULL
  
  out <- def.var.abl(
    densMoleAirDry = inp$densMoleAirDry,
    distZaxsAbl = inp$distZaxsAbl,
    distZaxsMeas = inp$distZaxsMeas,
    fluxH2o = inp$fluxH2o,
    fluxTemp = inp$fluxTemp,
    fluxTempVirtPot00 = inp$fluxTempVirtPot00,
    tempVirtPot00 = inp$tempVirtPot00,
    velo = inp$velo,
    veloFric = inp$veloFric
  )
  
  Example 3. fluxTemp is not supplied as function argument - tempScalAtmSurf reported as NaN.
  out <- def.var.abl(
    densMoleAirDry = inp$densMoleAirDry,
    distZaxsAbl = inp$distZaxsAbl,
    distZaxsMeas = inp$distZaxsMeas,
    fluxH2o = inp$fluxH2o,
    fluxTempVirtPot00 = inp$fluxTempVirtPot00,
    tempVirtPot00 = inp$tempVirtPot00,
    velo = inp$velo,
    veloFric = inp$veloFric
  )
  utils::str(out)
  base::rm(inp, out)
}
\references{
License: GNU AFFERO GENERAL PUBLIC LICENSE Version 3, 19 November 2007
Stull, R. B.: An Introduction to Boundary Layer Meteorology, Kluwer Academic Publishers, Dordrecht, The Netherlands, 670 pp., 1988.
Foken, T.: Micrometeorology, Springer, Berlin, Heidelberg, 306 pp., 2008.
}
\seealso{
Currently none.
}
\author{
Stefan Metzger \email{eddy4R.info@gmail.com}
}
\keyword{Deardorff}
\keyword{Obukhov}
\keyword{atmospheric}
\keyword{coefficient}
\keyword{convective}
\keyword{humidity}
\keyword{intensity,}
\keyword{length,}
\keyword{of}
\keyword{scale}
\keyword{scale,}
\keyword{stability,}
\keyword{temperature}
\keyword{timescale,}
\keyword{turbulence}
\keyword{variation,}
\keyword{velocity,}
